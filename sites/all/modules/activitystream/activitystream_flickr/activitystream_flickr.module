<?php
// $Id: activitystream_flickr.module,v 1.2.2.2.2.1 2008/08/16 08:51:43 akalsey Exp $
/**
 * @file
 * The module for importing Flickr Images.
 */

include('phpFlickr.php');

/*
 * The API passes in a $user object that contains four properties:
 * uid, userid, password, feed. These properties contain the account
 * information entered into the user's settings page, along with the 
 * uid of their Drupal account.
 */
function activitystream_flickr_streamapi($user) {
  // This user doesn't have a Flickr ID entered
  // into their settings. Move along. Nothing
  // to see here.
  if (!$user->userid) {
    return;
  }
  $f = new phpFlickr(variable_get('activitystream_flickr_key', ''));
  $person = $f->people_findByUsername($user->userid);
  $baseurl = $f->urls_getUserPhotos($person['id']);
  $photos = $f->people_getPublicPhotos($person['id'], NULL, 10);
  
  // There's no photos? Jump out.
  if (!is_array($photos['photo'])) {
    return;
  }
   
  $items = array();
  foreach ($photos['photo'] as $photo) {
    $info = $f->photos_getInfo($photo['id']);
    $link = $baseurl . $photo['id'];
    $activity['guid'] = $photo['id'];
    $activity['title'] = $photo['title'];
    $activity['link'] = $link;
    $activity['body'] = '<img class="activitystream-flickr photo" alt="'. $photo['title'] .'" src="'. $f->buildPhotoURL($photo, "Square") .'" />';
    $activity['timestamp'] = $info['dateuploaded'];
    $items[] = $activity;
  }
  return $items;
}

/*
 * Implement an admin form hook. Modules should build a form
 * using an array that mirrors the Drupal form API. activitystream.module
 * will add the form elements to the admin settings page.
 * To avoid collisions with other activitystream module's forms
 * use your module's name as the form array's key.
 */
function activitystream_flickr_activitystream_admin() {
  $form['activitystream_flickr'] = array(
    '#type' => 'fieldset',
    '#title' => t("Flickr"),
    '#description' => t("Flickr API settings."),
    '#weight' => 1,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE
  );
  $form['activitystream_flickr']['activitystream_flickr_key'] = array(
    '#type' => 'textfield',
    '#title' => t("API Key"),
    '#description' => t("Your Flickr API Key"),
    '#default_value' => variable_get('activitystream_flickr_key', ''),
    '#required' => FALSE
  );
  return $form;
}

/*
 * Implement a user settings form hook. Modules should build a form
 * using an array that mirrors the Drupal form API. activitystream.module
 * will add the form elements to a tab called Activity Streams on the
 * user's Profile Edit page. Fields should be named
 * yourmodulename_fieldname. For instance, to store the user ID for 
 * Flickr, the field name is activitystream_flickr_userid
 *
 * To avoid collisions with other activitystream module's forms
 * use your module's name as the form array's key.
 */
function activitystream_flickr_activitystream_settings(&$edit) {
  $form['activitystream_flickr'] = array(
    '#type' => 'fieldset',
    '#title' => t('Flickr settings'));
  $form['activitystream_flickr']['activitystream_flickr_userid'] = array(
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#default_value' => empty($edit['activitystream_flickr_userid']) ? '' : $edit['activitystream_flickr_userid'],
    '#description' => t('The username for your Flickr account'));
  return $form;  
}

/*
 * Return an image used to identify the activity. Most themes expect this is a 16x16 image
 * so you should stick with that. Return the full <img> tag for the image.
 */
function theme_activitystream_flickr_icon() {
  return theme_image(drupal_get_path('module', 'activitystream_flickr') .'/flickr.png', 'Flickr');
}

function theme_activitystream_flickr_item($action) {
  $node = node_load($action->nid);
  $date = theme('activitystream_date', $node->created);
  $user = activitystream_user_load($node->uid);	
  $name = theme('activitystream_username', $user);
  return '<span class="activitystream-item">'. theme('activitystream_flickr_icon') ." <span>$name posted " . l($node->title, $action->link) ." <span class=\"activitystream-created\">$date</span></span> ". l('#', 'node/'. $node->nid, array('class' => 'permalink')) .'</span>';
}


function activitystream_flickr_theme() {
  return array(
    'activitystream_flickr_icon' => array(
      'arguments' => array(),
    ),
    'activitystream_flickr_item' => array(
      'arguments' => array('activity' => NULL),
    ),
  );
}

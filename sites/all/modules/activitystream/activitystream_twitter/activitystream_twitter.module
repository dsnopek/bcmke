<?php
// $Id: activitystream_twitter.module,v 1.2.2.2.2.1 2008/08/16 08:51:43 akalsey Exp $
/**
 * @file
 * The module for importing twitter activity.
 */

/*
 * The API passes in a $user object that contains four properties:
 * uid, userid, password, feed. These properties contain the account
 * information entered into the user's settings page, along with the 
 * uid of their Drupal account.
 */
function activitystream_twitter_streamapi($user) {
  // This user doesn't have a twitter ID entered
  if (!$user->userid) {
    return;
  }
  
  // Use the activitystream_feed module to pull in the user's
  // tweets. 
  $user->feed = 'http://twitter.com/statuses/user_timeline/'. $user->userid .'.rss';
  $items = activitystream_feed_streamapi($user);
  foreach ($items as $tweet) {
    $userid = $user->userid .':';
    $tweet['title'] = preg_replace('/^'. $userid .' /', '', $tweet['title']);
    $tweet['body'] = activitystream_twitter_makelinks($tweet['body']);
    $newitems[] = $tweet;
  }
  return $newitems;
}

/*
 * Implement a user settings form hook. Modules should build a form
 * using an array that mirrors the Drupal form API. activitystream.module
 * will add the form elements to a tab called Activity Streams on the
 * user's Profile Edit page. Fields should be named
 * yourmodulename_fieldname. For instance, to store the user ID for 
 * Flickr, the field name is activitystream_flickr_userid
 *
 * To avoid collisions with other activitystream module's forms
 * use your module's name as the form array's key.
 *
 * @param $edit
 *   The values of the form fields, used for setting defaults
 * 
 */

function activitystream_twitter_activitystream_settings(&$edit) {
  $form['activitystream_twitter'] = array(
      '#type' => 'fieldset',
      '#title' => t('Twitter settings'));
  $form['activitystream_twitter']['activitystream_twitter_userid'] = array(
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#default_value' => empty($edit['activitystream_twitter_userid']) ? '' : $edit['activitystream_twitter_userid'],
    '#description' => t('The username for your Twitter account'));
  return $form;  
}

function theme_activitystream_twitter_icon() {
  return theme_image(drupal_get_path('module', 'activitystream_twitter') .'/twitter.png', 'Twitter');
}

function theme_activitystream_twitter_item($activity) {
  $node = node_load($activity->nid);
  $date = theme('activitystream_date', $node->created);
  $user = activitystream_user_load($node->uid);
  $title = activitystream_twitter_makelinks($node->title);
  $name = theme('activitystream_username', $user);
   return '<span class="activitystream-item">'. theme('activitystream_twitter_icon') ." <span>$name ". l('tweeted', $activity->link) ." \"". $title ."\" <span class=\"activitystream-created\">$date</span></span>". l('#', 'node/'. $node->nid, array('class' => 'permalink')) .'</span>';
}

function activitystream_twitter_makelinks($text) {
  // autolink URLS
  $text = eregi_replace('(((f|ht){1}tp://)[-a-zA-Z0-9@:%_\+.~#?&//=]+)', '<a href="\\1">\\1</a>', $text);
  $text = eregi_replace('([[:space:]()[{}])(www.[-a-zA-Z0-9@:%_\+.~#?&//=]+)', '\\1<a href="http://\\2">\\2</a>', $text);
  // @ tags for users
  $text = preg_replace('/@(\w*)/', '<a href="http://twitter.com/\\1">@\\1</a>', $text);
  // hashtags to hashtag.org
  $text = preg_replace('/#(\w*)/', '<a href="http://hashtags.org/tag/\\1/">#\\1</a>', $text);
  return $text;
}

function activitystream_twitter_theme() {
  return array(
    'activitystream_twitter_icon' => array(
      'arguments' => array(),
    ),
    'activitystream_twitter_item' => array(
      'arguments' => array('activity' => NULL),
    ),
  );
}
